---
- name: Push aci_model

  # We prepare an aci_login anchor for convenience
  vars:
    aci_login: &aci_login
      hostname: '{{ inventory_hostname }}'
      username: '{{ username }}'
      password: '{{ password }}'
      use_proxy: '{{ apic_use_proxy }}'
      validate_certs: '{{ apic_validate_certs }}'
      state: "{{state}}"

  # We define the delegate_to at the block-level
  delegate_to: localhost

  block:
    - name: Create tenants
      aci_tenant:
        <<: *aci_login
        tenant: '{{ item.tenant_name }}'
        description: '{{ item.tenant_description }}'
      with_items: '{{ aci_model_data|aci_listify("tenant") }}'

    - name: Create a new AP
      aci_ap:
        <<: *aci_login
        tenant: "{{item.tenant_name}}"
        ap: "{{item.tenant_app_name}}"
        description: Created by Ansible
      with_items: '{{ aci_model_data|aci_listify("tenant","app") }}'

    - name: Add a new VRF to a tenant
      aci_vrf:
        <<: *aci_login
        vrf: "{{item.tenant_vrf_name}}"
        tenant: "{{item.tenant_name}}"
        descr: Created by Ansible
        policy_control_preference: enforced
        policy_control_direction: ingress
      with_items: '{{ aci_model_data|aci_listify("tenant","vrf") }}'

    - name: Add Bridge Domain
      aci_bd:
        <<: *aci_login
        tenant: "{{item.tenant_name}}"
        bd: "{{item.tenant_bd_name}}"
#        mac_address: 00:22:BD:F8:19:FE
        vrf: "{{item.tenant_bd_vrf}}"
      with_items: '{{ aci_model_data|aci_listify("tenant","bd") }}'

    - name: Create a subnets for BDs
      aci_bd_subnet:
        <<: *aci_login
        tenant: "{{item.tenant_name}}"
        bd: "{{item.tenant_bd_name}}"
        gateway: "{{item.tenant_bd_subnet_name}}"
        mask: "{{item.tenant_bd_subnet_mask}}"
        scope: "{{item.tenant_bd_subnet_scope}}"
      with_items: '{{ aci_model_data|aci_listify("tenant","bd","subnet") }}'