---
- name: Push aci_model

  # We prepare an aci_login anchor for convenience
  vars:
    aci_login: &aci_login
      hostname: '{{ inventory_hostname }}'
      username: '{{ username }}'
      password: '{{ password }}'
      use_proxy: '{{ apic_use_proxy }}'
      validate_certs: '{{ apic_validate_certs }}'

  # We define the delegate_to at the block-level
  delegate_to: localhost

  block:
    - name: Create tenants
      aci_tenant:
        <<: *aci_login
        tenant: '{{ item.tenant_name }}'
        description: '{{ item.tenant_description }}'
      with_items: '{{ aci_model_data|aci_listify("tenant") }}'

    - name: Add VLAN pools
      aci_vlan_pool:
        <<: *aci_login
        pool: '{{item.access_policy_vlan_pool_name}}'
        pool_allocation_mode: '{{item.access_policy_vlan_pool_alloc}}'
        description: Configured by Ansible
        state: '{{state}}'
      with_items: '{{ aci_model_data|aci_listify("access_policy","vlan_pool") }}'

    - name: Add a new VLAN encap block
      aci_vlan_pool_encap_block:
        <<: *aci_login
        block_name: "{{item.access_policy_vlan_pool_name}}"
        pool: "{{item.access_policy_vlan_pool_name}}"
        pool_allocation_mode: '{{item.access_policy_vlan_pool_alloc}}'
        block_start: "{{item.access_policy_vlan_pool_encap_block_from}}"
        block_end: "{{item.access_policy_vlan_pool_encap_block_to}}"
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","vlan_pool","encap_block") }}'

    - name: Add physical domains
      aci_domain:
        <<: *aci_login
        domain: "{{item.access_policy_physical_domain_name}}"
        domain_type: phys
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","physical_domain") }}'

    - name: Add a new AEP
      aci_aep:
        <<: *aci_login
        aep: "{{item.access_policy_aep_name}}"
        description: Configured by ansible
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","aep") }}'

    - name: Link AEPs to domains
      aci_aep_to_domain: #&binding_present
        <<: *aci_login
        aep: "{{item.access_policy_aep_name}}"
        domain: "{{item.access_policy_aep_domain_name}}"
        domain_type: phys
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","aep", "domain") }}'

    - name: Bind a physical domain to VLAN pool
      aci_domain_to_vlan_pool:
        <<: *aci_login
        domain: "{{item.access_policy_physical_domain_name}}"
        domain_type: '{{item.access_policy_physical_domain_vlan_pool_alloc}}'
        pool: "{{item.access_policy_physical_domain_vlan_pool}}"
        pool_allocation_mode: static
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","physical_domain") }}'

    - name: Create switch policy profiles
      aci_switch_policy_leaf_profile:
        <<: *aci_login
        leaf_profile: "{{item.access_policy_switch_policy_profile_name}}"
        description: Configured by ansible
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_profile") }}'

    - name: Add leaf selectors to switch policy profiles
      aci_switch_leaf_selector:
        <<: *aci_login
        leaf_profile: "{{item.access_policy_switch_policy_profile_name}}"
        leaf: "{{item.access_policy_switch_policy_profile_leaf_selector_name}}"
        leaf_node_blk: "{{item.access_policy_switch_policy_profile_leaf_selector_name}}"
        from: "{{item.access_policy_switch_policy_profile_leaf_selector_from}}"
        to: "{{item.access_policy_switch_policy_profile_leaf_selector_to}}"
        state: "{{state}}"
      with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_profile","leaf_selector") }}'

    - name: Add a new leaf_interface_profile
      aci_interface_policy_leaf_profile:
        <<: *aci_login
        leaf_interface_profile: '{{item.access_policy_interface_policy_profile_name}}'
        description:  Configured by Ansible
        state: '{{state}}'
      with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_profile") }}'


    - name: Add interface selector to interface policy profiles
      aci_rest:
        <<: *aci_login
        path: /api/node/mo/uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}.json
        method: post
        content:
          {"infraAccPortP":{"attributes":{"descr":"","dn":"uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}","name":"{{ item.access_policy_interface_policy_profile_name }}","ownerKey":"","ownerTag":""},"children":[{"infraHPortS":{"attributes":{"descr":"","name":"{{ item.access_policy_interface_policy_profile_interface_selector_name }}","ownerKey":"","ownerTag":"","type":"range"},"children":[{"infraRsAccBaseGrp":{"attributes":{"fexId":"101","tDn":"uni/infra/funcprof/{{ item.access_policy_interface_policy_profile_interface_selector_policy_group_type }}-{{ item.access_policy_interface_policy_profile_interface_selector_policy_group }}"}}},{"infraPortBlk":{"attributes":{"descr":"","fromCard":"{{ item.access_policy_interface_policy_profile_interface_selector_int_card }}","fromPort":"{{ item.access_policy_interface_policy_profile_interface_selector_int_from }}","name":"block2","toCard":"{{ item.access_policy_interface_policy_profile_interface_selector_int_card }}","toPort":"{{ item.access_policy_interface_policy_profile_interface_selector_int_to }}"}}}]}}]}}
      with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_profile","interface_selector") }}'

    - name: Create LLDP interface policies
      aci_intf_policy_lldp:
        <<: *aci_login
        lldp_policy: '{{ item.access_policy_interface_policy_lldp_name }}'
        receive_state: '{{ item.access_policy_interface_policy_lldp_receive_state }}'
        transmit_state: '{{ item.access_policy_interface_policy_lldp_transmit_state }}'
      with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_lldp") }}'

    - name: Create a CDP policy
      aci_rest:
        <<: *aci_login
        path: api/node/mo/uni/infra/cdpIfP-{{ item.access_policy_interface_policy_cdp_name }}.json  # Path to the CDP object
        method: "{{ 'post' if (item.access_policy_interface_policy_cdp_state == 'present') else 'delete' }}"
        content:
          cdpIfPol: #CDP policy object itself
            attributes:
              name: "{{ item.access_policy_interface_policy_cdp_name }}"
              adminSt: "{{ item.access_policy_interface_policy_cdp_adminSt }}"  #Admin State setting, can be enabled or disabled
      with_items:
        - "{{ aci_model_data|aci_listify('access_policy','interface_policy_cdp') }}"

    - name: Create a Leaf Access Port Policy Group (no description)
      aci_interface_policy_leaf_policy_group:
        <<: *aci_login
        lag_type: leaf
        policy_group: "{{item.access_policy_interface_policy_policy_group_access_name}}"
        link_level_policy: "{{item.access_policy_interface_policy_policy_group_access_lldp}}"
        cdp_policy: "{{item.access_policy_interface_policy_policy_group_access_cdp}}"
        aep: "{{item.access_policy_interface_policy_policy_group_access_aep}}"
        state: present
      with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_policy_group_access") }}'


#    - name: Associate an access port block (single port) to an interface selector
#      aci_access_port_block_to_access_port:
#        <<: *aci_login
#        leaf_interface_profile: POD1_Leaf101
#        access_port_selector: POD1_Leaf101
#        leaf_port_blk: POD1_Leaf101
#        from_port: 5
#        to_port: 5
#        state: '{{state}}'
#      with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_profile","interface_selector") }}'